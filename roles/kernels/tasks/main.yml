# vim: ft=yaml.ansible
---

- name: Install kernels
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: '{{ kernels.list | default(["linux"]) }}'

- name: Install kernel headers
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: '{{ kernels.list | default(["linux"]) | product(["headers"]) | map("join", "-") }}'
  when: kernels.headers is defined and kernels.headers

- name: Install firmware package
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: linux-firmware

- name: Install optional dependencies
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: scx-scheds  # sched-ext schedulers in kernel 6.12+

- name: Install extra kernel packages (modules, etc)
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: '{{ [kernels.extra_modules] | default([]) | flatten }}'

- name: Install microcode
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: '{{ kernels.microcode }}'
  when: kernels.microcode is defined

- name: Install kernel pacman hook
  ansible.builtin.include_role:
    name: pacman
    tasks_from: install_pkg
  vars:
    pacman_packages: mkmm

- name: Ensure that hook dir exists
  become: true
  ansible.builtin.file:
    path: '/etc/pacman.d/hooks'
    state: directory
    mode: '755'

- name: Enable pacman hooks
  become: true
  ansible.builtin.file:
    src: '/usr/share/mkmm/{{ item }}.hook'
    dest: '/etc/pacman.d/hooks/{{ item }}.hook'
    state: link
  with_items:
    - 10-mkmm-pre
    - 65-mkmm-post

- name: Disable pacman hooks
  become: true
  ansible.builtin.file:
    src: '/dev/null'
    dest: '/etc/pacman.d/hooks/{{ item }}.hook'
    state: link
  with_items:
    - 10-mkmm-tmpfs-pre
    - 65-mkmm-tmpfs-post

- name: Install mkmm bleach service
  become: true
  ansible.builtin.systemd:
    name: 'mkmm-bleach.service'
    enabled: true

- name: Add/remove kernel modules
  become: true
  community.general.modprobe:
    name: '{{ item.name }}'
    params: '{{ item.params | default(omit) }}'
    persistent: '{{ item.state | default("present") }}'
    state: '{{ item.state | default("present") }}'
  loop: '{{ kernels.modprobe }}'
  when: kernels.modprobe is defined

- name: Blacklist kernel modules
  become: true
  community.general.kernel_blacklist:
    name: '{{ item }}'
    state: present
  loop: '{{ kernels.module_blacklist }}'
  when: kernels.module_blacklist is defined

- name: Increase vm.max_map_count=2147483642
  become: true
  ansible.posix.sysctl:
    name: 'vm.max_map_count'
    sysctl_file: '/etc/sysctl.d/50-increase-vm-max-map-count.conf'
    sysctl_set: true
    value: '2147483642'

- name: Increase fs.inotify.max_user_instances=8192
  become: true
  ansible.posix.sysctl:
    name: 'fs.inotify.max_user_instances'
    sysctl_file: '/etc/sysctl.d/60-increase-fs-inotify-max-user-instances.conf'
    sysctl_set: true
    value: '8192'

- name: Increase fs.inotify.max_user_watches=524288
  become: true
  ansible.posix.sysctl:
    name: 'fs.inotify.max_user_watches'
    sysctl_file: '/etc/sysctl.d/50-increase-fs-inotify-max-user-watches.conf'
    sysctl_set: true
    value: '524288'
