# vim: ft=yaml.ansible
---

- name: List not installed packages
  become: true
  become_user: '{{ archconfig_user.name | default("archconfig") }}'
  ansible.builtin.command:
    argv: |
      {{ [pacman.executable | default('paru'), '--query', '--quiet', '--'] + ([pacman_packages | mandatory] | flatten |
      map('regex_replace', '.*/(.*)$', '\1')) }}
    strip_empty_ends: true
  register: installed_packages_result
  changed_when: false
  failed_when: 'installed_packages_result.rc > 1'
  when: '([pacman_packages | mandatory] | flatten | length) > 0'

- name: Install missing packages
  become: true
  become_user: '{{ archconfig_user.name | default("archconfig") }}'
  vars:
    pkgs_to_install: |
      {{ installed_packages_result.stderr_lines | map('regex_replace', "error: package '(.*)' was not found", '\1') |
      default([]) }}
  ansible.builtin.command:
    argv: '{{ [pacman.executable | default("paru"), "--sync", "--noconfirm", "--noprogressbar", "--needed", "--",
      pkgs_to_install] | flatten }}'
    strip_empty_ends: true
  register: pacman_result
  changed_when: "'there is nothing to do' is not in (pacman_result.stdout_lines | last)"
  when: '(pkgs_to_install | length) > 0'
